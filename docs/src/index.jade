!!! 5
html.style-dark
  head
    title CompoundJS - build apps with love
    link(rel="stylesheet", href="stylesheets/application.css")
    link(rel="stylesheet", href="stylesheets/prettify.css")
    link(href="http://fonts.googleapis.com/css?family=Quicksand:300", rel="stylesheet")

    script(src="http://code.jquery.com/jquery-1.7.1.min.js")
    script(src="javascripts/prettyprint.js")
    script(src="javascripts/application.js")
  body
    .sidebar.hidden
      ul.items

    .content-wrapper
      img.logo(src="images/logo.png", alt="CompoundJS")

      .style-switch

      section(id="routing")
        h1 Routing

        p
          | The purpose of routes is to connect a URL with a controller action. For example, you can define the following route in 
          code config/routes.js
          |  to link 
          code GET /signup
          |  with 
          code new
          |  action of 
          code users
          |  controller:

        pre.prettyprint map.get('signup', 'users#new');

        p
          | The following route will link 
          code GET /
          |  to the 
          code index
          |  action of the
          code home
          |  controller:

        pre.prettyprint map.root('home#index');

      section(id="routing-resources")
        h2 Resource-based routing

        p Resource-based routing provides standard mapping between HTTP verbs and controller actions:

        pre.prettyprint map.resources('posts');

        p will provide the following routes:

        pre.prettyprint.
          &nbsp;&nbsp;helper | method | path                   | controller#action
              posts GET      /posts                   posts#index
              posts POST     /posts                   posts#create
          &nbsp;new_post GET      /posts/new               posts#new
          edit_post GET      /posts/:id/edit          posts#edit
               post DELETE   /posts/:id               posts#destroy
               post PUT      /posts/:id               posts#update
               post GET      /posts/:id               posts#show.

        p 
          | To list all available routes you can run the command 
          code compound routes
          | .

        p
          | The first column of the table represents the 
          code helper
          |  - you can use this identifier in views and controllers to get the route. Some examples:

        pre.prettyprint.
          path_to.new_post            # /posts/new
          path_to.edit_post(1)        # /posts/1/edit
          path_to.edit_post(post)     # /posts/1/edit (in this example post = {id: 1})
          path_to.posts               # /posts
          path_to.post(post)          # /posts/1.


      section(id="routing-resources-alias")
        h2 Aliases for resourceful routes

        p
          | If you want to override default routes behaviour, you can use two options: 
          code as
          |  and 
          code path
          |  to specify a helper name and a path you want to have in the result.

        section(id="routing-resources-alias-as")
          h3 { as: 'helperName' }

          p Path helper aliasing:

          pre.prettyprint map.resources('posts', { as: 'articles' });

          p This will create the following routes:

          pre.prettyprint.
            &nbsp;&nbsp;&nbsp;&nbsp;articles GET    /posts.:format?          posts#index
                articles POST   /posts.:format?          posts#create
            &nbsp;new_article GET    /posts/new.:format?      posts#new
            edit_article GET    /posts/:id/edit.:format? posts#edit
                 article DELETE /posts/:id.:format?      posts#destroy
                 article PUT    /posts/:id.:format?      posts#update
                 article GET    /posts/:id.:format?      posts#show.

        section(id="routing-resources-alias-path")
          h3 { path: 'alternatePath' }

          p If you want to change the base path:

          pre.prettyprint map.resources('posts', { path: 'articles' });

          p This will create the following routes:

          pre.prettyprint.
            &nbsp;&nbsp;&nbsp;&nbsp;posts GET    /articles.:format?          posts#index
                posts POST   /articles.:format?          posts#create
            &nbsp;new_post GET    /articles/new.:format?      posts#new
            edit_post GET    /articles/:id/edit.:format? posts#edit
                 post DELETE /articles/:id.:format?      posts#destroy
                 post PUT    /articles/:id.:format?      posts#update
                 post GET    /articles/:id.:format?      posts#show

        section(id="routing-resources-alias-both")
          h3 All together

          p If you want to alias both the helper and the path:

          pre.prettyprint map.resources('posts', { path: 'articles', as: 'stories' });

          p This will create the following routes:

          pre.prettyprint.
            &nbsp;&nbsp;&nbsp;stories GET    /articles.:format?          posts#index
               stories POST   /articles.:format?          posts#create
            &nbsp;new_story GET    /articles/new.:format?      posts#new
            edit_story GET    /articles/:id/edit.:format? posts#edit
                 story DELETE /articles/:id.:format?      posts#destroy
                 story PUT    /articles/:id.:format?      posts#update
                 story GET    /articles/:id.:format?      posts#show

      section(id="routing-nested-resources")
        h2 Nested resources